---
title: The Birth (블로그의 탄생)
layout: post
---

## 홈페이지 15 年史

제가 처음 만들어본 홈페이지는 좌우 프레임을 나누어 왼쪽에는 메뉴, 오른쪽에는 간단한 자기소개가 나오는 것이었습니다. 1990년대 후반에는 텍스트 에디터로 HTML 문서를 작성하여 홈페이지를 만들었는데 WYSIWYG (_what you see is what you get_) 이 지원되지 않아 디자인 요소 (레이아웃, 색, 서식)를 만드는 것이 무척 비효율적이었습니다. 2000년대 초반에는 대학에서 php, mySql을 이용하여 웹서버쪽 프로그램을 만드는 것에 관심이 많았습니다. 그 당시만 해도 제게 홈페이지는 코딩 연습의 장일 뿐이었지 딱히 컨텐츠를 위한 것이 아니었습니다. 이미 html, css, java script, mysql, php 등을 사용해 폭풍 코딩을 끝내고 나면 컨텐츠를 만들 여력은 남지 않았습니다.

2000년대 중반에 대학원에 진학하면서 배운 것을 정리하기 위해 컨텐츠에 집중하기 시작했습니다. 위키위키와 설치형 게시판 플랫폼을 통해 개인 홈페이지를 꾸며봤습니다만 결국 수식, 그래프등을 표현하는데 한계를 느껴 포기했습니다. 제 15여년의 홈페이지 역사 속에는 기술 공부만 있었고 컨텐츠는 없었습니다.

{% highlight html %}
홈페이지를 멋지게 만드는 것은 기술이 아닌 디자인. 홈페이지를 의미있게 만드는 것은 컨텐츠이다.
{% endhighlight %}

## 블로그

이미 웹 상에는 블로그 (혹은 비슷한) 서비스들이 많이 있습니다. 티스토리, 네이버 블로그, 싸이월드 블로그, WIX 등은 사용해도 보았습니다. 하지만 내 컨텐츠를 저 회사가 소유한다는 느낌이 자꾸 들어서 저들은 쓰지 않습니다. 또한 그래프, 수식, 코드 등의 삽입이 쉽지 않다는 치명적인 단점을 갖고 있습니다.

일단 제가 생각하는 이상적인 홈페이지 서비스를 정의해 봤습니다.

  * 글쓸 때 서식 적용이 편리해야 한다. [markdown][markdown-example]
  * 웹에 퍼블리시 하기 전에 로컬에서 확인 가능해야 한다.
    * 로컬에서 웹서버와 같은 환경을 만들 수 있어야 한다. django, [jekyll][jekyll-home]
    * 간편한 방법으로 로컬의 정보를 웹으로 동기화 할 수 있어야 한다. [github][github-home]
  * 수식, 그래프, 코드를 쉽게 쓸 수 있어야 한다. [jupyter][jupyter-home]
  * 버전관리가 되어야 한다. [github][github-home]
  * 무료 혹은 저렴한 호스팅 서비스에서 위의 요구 조건을 맞출 서비스를 지원한다.


그러던 중에 이 모든걸 가능하게 해주는 서비스를 찾았습니다. 바로 [GitHub Pages][github-pages]. GitHub Pages는 GitHub이라는 곳에서 서비스하는 무료 홈페이지 호스팅입니다. GitHub은 source code를 위한 repository를 제공하고 개발자간 협업을 지원하는 곳입니다. Git이라는 프로그램을 이용하여 내 컴퓨터에 있는 홈페이지 소스를 아주 쉽게 `버전관리` 할 수 있습니다. Git을 이용하면 순식간에 내 컴퓨터에 있는 소스코드를 GitHub에 `동기화` 할 수 있습니다. 여기까지 하면 동기화된 소스코드는 웹에서 소스코드로 볼 수 있는데, GitHub pages라는 서비스를 이용하면 소스코드가 보이는 대신에 웹페이지가 `퍼블리시`됩니다. (Git,GitHub,GitHub Pages를 구분해서 다시 읽어보세요)

GitHub Pages는 공식적으로 [jekyll][jekyll-home]을 지원하는데 jekyll은 쉽게 말하면 [markdown][markdown-example]으로 작성된 글을 html로 렌더링해 주는 툴입니다. 즉 jekyll을 이용하면 `손쉽게 서식이 있는 글을 작성`할 수 있습니다. 또한 Jekyll은 `로컬 웹서버를 제공`하기에 웹사이트를 인터넷에 올리지 전에 로컬에서 미리 확인해 볼 수 있습니다.

Jekyll은 [Jupyter Notebook][jupyter-home]을 이용해 수식, 그래프 등을 쉽게 HTML로 렌더링 할 수 있습니다. Jupyter Notebook은 Interactive Python을 지원하기는 문서작성기 웹앱입니다. 이 노트북은 python을 지원하기에 numpy, matplotlib를 이용한 matlab 수준의 텐서 연산 및 `강력한 그래프 기능`을 제공합니다.

**정리**
* Jekyll: 손쉽게 웹사이트 구축 가능
* jekyll + Jupyter: 손쉽게 수식 및 그래프 출력 가능
* jekyll + Jupyter + git: 소스코드의 버전관리 용이
* jekyll + Jupyter + git + github: 소스코드를 온라인에 보관 가능
* jekyll + Jupyter + git + github + github pages: 온라인에 올린 소스코드가 웹페이지로 보임

github은 무료 서비스이나 서비스를 유료 구독하지 않으면 source code가 항상 public이므로 소스코드 유출이 싫은 사람은 한달에 $7을 내야한다.

**참고사이트**
* [GitHub Pages][github-pages]
* [Creating and Hosting a Personal Site on GitHub][ref2]
* "[Blogging with Python][ref1]" tell you how to integrate Jupyter Notebook into Jekyll

**To Be Updated:**
* Jekyll on User Site
* Jekyll on Project Site (gh-pages branch)
* Overriding basepath/path for local test (blog in subdirectory case)
{% highlight bash %}
# after setting baseurl and url
jekyll serve --config _config.yml,_local.yml
{% endhighlight %}


[github-pages]: https://pages.github.com
[jekyll-home]: http://jekyllrb.com
[markdown-example]: https://en.wikipedia.org/wiki/Markdown#Example
[jupyter-home]: http://jupyter.org
[github-home]: http://github.com
[ref1]: http://www.boxnwhis.kr/2015/02/10/blogging_with_python.html
[ref2]: http://jmcglone.com/guides/github-pages/